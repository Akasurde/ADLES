@startuml


package "Core Application" {
    object main {
        + main()
    }

    object parser {
        + check_syntax()
        + parse_file()
        + verify_syntax()
    }

    object utils {
        + setup_logging()
        + time_execution()
        + make_vsphere()
        + script_setup()
    }

    main -> parser
}


package "Platform Interfaces" {

    interface Interface {
        + create_masters()
        + deploy_environment()
        + cleanup_masters()
        + cleanup_environment()
    }

    class Group {
        + name
        + size
        + users
        + group_type
        + get_ad_groups()
    }
    Interface -- Group

    package "VMware vSphere" {

        class VsphereInterface {
            + create_masters()
            + cleanup_masters()
            - _master_folder_gen()
            - _clone_service()
            - _create_master_networks()
            - _configure_nics()
            + deploy_environment()
            + cleanup_environment()
            - _convert_and_verify()
            - _gen_services()
            - _parent_folder_gen()
            - _deploy_folder_gen()
            - _instances_handler()
        }

        class vSphere {
            + server
            + datacenter
            + datastore
            + create_folder()
            + gen_clone_spec()
            + get_server_info()
            + get_folder()
            + get_vm()
            + get_network()
            + get_host()
            + get_cluster()
            + get_datastore()
            + get_pool()
            + get_obj()
            + get_objs()
        }

        object vsphere_utils {
            + wait_for_task()
            + get_datastore_info()
        }
        
        object folder_utils {
            + get_in_folder()
            + find_in_folder()
            + traverse_path()
            + enumerate_folder()
            + format_structure()
            + move_into_folder()
            + create_folder()
            + cleanup()
            + retrieve_items()
        }

        object vm_utils {
            + clone_vm()
            + create_vm()
            + gen_vm_spec()
            + destroy_vm()
            + edit_vm()
            + upgrade_vm()
            + change_vm_state()
            + change_power_state()
            + change_guest_state()
            + convert_to_template()
            + convert_to_vm()
            + set_note()
            + create_snapshot()
            + get_vm_info()
            + add_nic()
            + edit_nic()
            + delete_nic()
            + attach_iso()
        }

        object network_utils {
            + create_vswitch()
            + create_portgroup()
            + delete_network()
        }
        
        class pyvmomi {
            + vim
            + vmodl
        }

        Interface -- VsphereInterface
        VsphereInterface -> vSphere
        vSphere -> pyvmomi
        vSphere -- vsphere_utils
        vSphere -- folder_utils
        vSphere -- vm_utils
        vSphere -- network_utils
    }

    package "Docker" {

        class DockerInterface {
            + create_masters()
            + cleanup_masters()
            + deploy_environment()
            + cleanup_environment()
        }

        class Docker {

        }

        class dockerpy {

        }

        Interface -- DockerInterface
        DockerInterface -> Docker
        Docker -> dockerpy
    }
}

main -> Interface

@enduml