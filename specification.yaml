---
# Specification of syntax for files used to define a virtual environment
# Format:       YAML 1.1 (This is due to PyYAML's support)
# Version:      0.1.0
# Changelog:    N/A until spec is stable
# Author:       Christopher Goes
# Date:         October 12th, 2016

# Syntax inspirations: 
#   https://docs.docker.com/compose/compose-file/
#   https://docs.ansible.com/ansible/YAMLSyntax.html
# System specification needs to take into account things such as templates, containers
# "Instances" is assumed to be one unless specified otherwise. They cannot be negative or zero.

# *** Labels for syntactic components ***
# Note: Children do not have to be specified if parent is not defined
# Note: If no label is given, "Optional" is implied
# REQUIRED      Will error upon parsing
# Suggested     Will give a warning when parsing, but still finish the parse
# Optional      Do not have to be specified

# *** Definitions ***
# vm    Virtual Machine
# ad    Active Directory



name: "a human-readable title for the specification" # REQUIRED
description: "a human-readable description of specification" # Optional
date-created: "date the specification was created" # Suggested
version: "version of the document" # Optional

# If not defined, default 'infrastructure.yaml' is checked, if not found user is prompted 
infrastructure-file: "filename of environment infrastructure info" # Suggested


# User groups, such as teams, students, instructors, etc.
groups: # NOTE: Can also be specified as "teams"
	- (option A) ad-groups:  {"group-a": "RADICL Users", "group-b": "RADICL Admins"}
	- (option B) manual-specification: {"group-a", "user-b", "user-c"}
	- (option C) from-a-file: "filename"


# Case insensitive EXCEPT for resources, such as templates or images
# Template configurations will be overriden if certain options are set
# If containers are used, a GitLab server or Docker registry must be specified
# Three types of service: template, container, compose
# Template:     Templatized VM in vSphere
# Container:    Docker container
# Compose:      Docker compose file
services:
    - service-label: 
        - template: "name of template in vSphere"
            video: yes/no # This will OVERRIDE template
                accelerate: yes/no
        - container: # THIS OR TEMPLATE
            image: "name of the docker image"
            tag: "tag for the image"
        - metadata: # OPTIONAL
            name: "name of the os"
            version: "version of the os"
            family: "major family os belongs to"


# Lab resources that are to be utilized.
# Example: access to a specific portion of the power lab. 
# Example: access to RADICL's  Wireless testbed
resources:

        
# Note: distributed vSwitches are an implementation detail of system, and are not considored as part of the specification.
# Non-Private (RFC 1918) networks will result in a warning that can be suppressed.
# VLANs are implicitly defined?
# Don't NEED IP addresses, just named networks. Addresses only matter if running configuration scripts or adding a pre-configured router
# IP version is implicitly defined by address (using ipaddress module in python)
# vSwitches are implicitly defined by networks
networks: 
    - unique-subnets: # Only one of each of these exists. If specified, any hosts will be added to it.
        - (Option A) label-a: 
            - mask: "255.255.255.0"
            - subnet: "192.168.0.0"
        - (Option B) label-b: "192.168.1.0/24" # Note CIDR notation
    - generic-subnets: # Subnets that new instances are created per instance of an exercise
    - base-subnets: # Subnets that will have any values in network portion of address with X are incremented for each instance 

    - routes: # Do we want this, or just have someone make a router?


# Groupings of objects defined previously in file
folders:
    - folder-a:
        - services:
            - service-instance-label: 
                - service: service-label # Defined in services
                - instances: 2 # Number of instances 
                - networks: ["subnet-a", "subnet-b"]


â€¦